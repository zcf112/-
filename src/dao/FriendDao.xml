<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.FriendDao">
    <!--
        建立表与实体类映射对应关系
        ID属性:唯一标识符，给查询标签引用
        type:指定实体类全限定类名
    -->
    <resultMap id="friendMap" type="domain.Friend">
        <!-- 用于指定主键的映射关系 -->
        <id column="id" property="id"></id>
        <!-- 用于指定非主键映射关系 -->
        <result column="userId" property="userId"></result>
        <result column="name" property="name"></result>
        <result column="sex" property="sex"></result>
        <result column="age" property="age"></result>
        <result column="qq" property="qq"></result>
        <result column="telephone" property="telephone"></result>
        <result column="email" property="email"></result>
        <result column="address" property="address"></result>
    </resultMap>

    <!-- 添加好友(未完成) -->
    <insert id="addFriend" parameterType="friend">
        <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username,birthday,sex,address)values(#{username},#{birthday},#{sex},#{address});
    </insert>

    <!-- 删除好友-->
    <delete id="deleteFriend" parameterType="java.lang.Integer">
        DELETE from friends where id = #{id}
    </delete>

    <!-- 更新好友 -->
    <update id="updateFriend" parameterType="friend">
      update friends set name=#{name},sex = #{sex},age=#{age},qq=#{qq},telephone=#{telephone},email=#{email},address=#{address} where id = #{id}
    </update>

    <!-- 查找当前用户所有好友 -->
    <select id="findAll" resultMap="friendMap">
      select * from friends where userId = #{userId}
    </select>

    <!-- 按姓名模糊查询 -->
    <select id="findByName" resultType="friend" parameterType="String">
      select * from friends where name like #{name}
    </select>

    <!--    &lt;!&ndash; 查询总记录条数 &ndash;&gt;-->
    <!--    <select id="findTotal" resultType="int">-->
    <!--      select count(*) from friends-->
    <!--    </select>-->

    <!--    &lt;!&ndash; 保存用户 &ndash;&gt;-->
    <!--    <insert id="saveUser" parameterType="user">-->
    <!--        <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">-->
    <!--            select last_insert_id()-->
    <!--        </selectKey>-->
    <!--        insert into user(username,birthday,sex,address)values(#{username},#{birthday},#{sex},#{address});-->
    <!--    </insert>-->
    <!--    -->
    <!--    &lt;!&ndash; 根据条件查询用户 &ndash;&gt;-->
    <!--    <select id="findByVo" parameterType="queryvo" resultType="user">-->
    <!--        select * from user where username like #{user.username} and sex = #{user.sex}-->
    <!--    </select>-->
</mapper>